#ifndef OBJECTS_H_
#define OBJECTS_H_

#include <glm/vec3.hpp>
#include <glm/matrix.hpp>
#include "src/graphics/data/vbocube.h"

namespace objType
{
	//Ñïåöûàëüíûå îáúåêòû ïîñòàâëåíû ïåðâûìè, ïîòîìó ÷òî íåêîòîðûì èç íèõ 
	//òðåáóþòñÿ èñòî÷íèêè ñâåòà: êîíåö óðîâíÿ, òåëåïîðò, ñåêðåòíîå ìåñòî.
	//À ò.å. èñòî÷íèê ñâåòà, ÷òî îêðóæàåò áëèæàéøåå ïðîñòðàíñòâî âîêðóã
	//ïåðñîíàæà èìååò íîìåð 0, òî îáúåêòû íà÷èíàþòñÿ ñ 1. è ñàìîå ãëàíîå
	//ïðîïàäàåò íåîáõîäèìîñòü ñîçäàâàòü îòäåëüíûå êîíñòàíòû, äëÿ ðàáîòû ñî 
	//ñâåòîì - äîñòàòî÷íî èñïîëüçîâàòü íîìåðà îáúåêòîâ è âñå!
	//Îò ýòîãî åñòü åùå îäèí ïëþñ: íîìåðà òåêñòóð â ìàññèâå ê ñïåöûàëüíûì
	//îáúåêòàì ñîîòâåòñòâóþò íîìåðàì ýòèõ îáúåêòîâ.

	const int vb_end_lavel					= 0;//Êîíåö óðîâíÿ
	const int vb_teleport					= 1;//Òåëåïîðò
	const int vb_secret_place				= 2;//Ñåêðåòíîå ìåñòî

	const int vb_kit						= 3;//Àïòå÷êà
	const int vb_armour						= 4;//Áðîíÿ
	const int vb_armour_mini				= 5;//ìàëàÿ áðîíÿ
	const int vb_soul						= 6;//Ìîíåòà ;  1 - ðåáðî 2 - âåðõíÿÿ ÷àñòü (íèæíÿÿ íå íóæíà)
	const int vb_artefact					= 7;//Àðòåôàêò

	const int vb_javelin					= 8;//Äðîòèê
	const int vb_stake						= 9;//Îñèíîâûé êîë *drive in the stake )))
	const int vb_spade						= 10;//ëîïàòà

	const int vb_tree						= 11;//Äåðåâî
	const int vb_bush_1						= 12;//Êóñò
	const int vb_bush_2						= 13;//Êóñò

	const int vb_grass_1					= 14;//Òðàâà
	const int vb_grass_2					= 15;//Òðàâà

	const int vb_fence						= 17;//Æåëåçíûé çàáîð ñ ñåòêîé

	const int vb_door						= 18;//Äâåðü
	const int vb_door_cupe					= 20;//Äâåðü-êóïå
	const int vb_stairs						= 21;//Ëåñòíèöà
	const int vb_lift						= 22;//Ëèôò
	const int vb_jump_rope					= 23;//Ïðûãàëêà 

	const int tex_wall						= 24;//Òîëüêî äëÿ òåêñòóðû ñòåíû
	const int tex_barrel					= 25;//Òîëüêî äëÿ òåêñòóðû áî÷êè
	const int tex_sky						= 26;//Òîëüêî äëÿ òåêñòóðû íåáà
	const int vb_sp_max						= 27;//Êîíñòàíòà, äëÿ îòäåëüíîãî ìàññèâà òåêñòóð ñïåöûàëüíûõ îáúåêòîâ

	//--------Îáû÷íûå-îáúåêòû------------------
	const int vb_cube						= vb_sp_max + 1;//Êóá
	const int vb_sphere						= vb_sp_max + 2;//Ñôåðà

	const int vb_cylinder					= vb_sp_max + 3;//Öûëèíäð
	const int vb_cylinder_without_bottoms	= vb_sp_max + 4;//Öûëèíäð áåç îñíîâàíèé

	const int vb_cone						= vb_sp_max + 5;//Êîíóñ
	const int vb_cone_without_bottom		= vb_sp_max + 6;//Êîíóñ áåç îñíîâàíèÿ

	const int vb_polygoneV					= vb_sp_max + 7;//Âåðòèêàëüíûé ïîëèãîí
	const int vb_2polygoneV					= vb_sp_max + 8;//äâà âåðòèêàëüíûõ ïîëèãîíà


	//--------Âñå-îñòàëüíîå-èìïîðòèðîâàííûå----
	//--------îáúåêòû--------------------------

	const int vb_max = vb_sp_max + 9;
};

//Êîëè÷åñòâî îáúåêòîâ
int objCount = 0;

//Ìàêñèìàëüíîå êîëè÷åñòâî áóôåðîâ â îáúåêòå
const int maxbuf = 3;

struct Object_
{
	int obj;//òèï âûâîäèìîãî îáúåêòà íà ýêðàí îáúåêòà (objType)
	int modelColl;//Ìîäåëü ñòîëêíîâåíèÿ
	bool show;//ïàðàìåòð ïîçâîëÿþùèé ñêðûâàòü îáúåêòû

	float timeNotShow;//ôèêñàöèÿ âðåìåíè äåàêòèâàöèè îáþúúåêòà
	float timeReShow;//âðåìÿ ïðåáûâàíèÿ îáúåêòà â äåàêò ñîñò
	bool animated;//âêëþ÷èòü àíèìàöèþ
	float speedAnimated;//óãîâàÿ ñêîðîñòü âðàùåíèÿ îáúåêòà âîêðóã îñè Z â ðàäèàíàõ â ñåêóíäó ïðè animated = true
						//èëè ñêîðîñòü ïåðåìåùåíèÿ ëèôòà, íî animated äîëæíî ðàâíÿòüñÿ false

	bool doubleRender;//Âûâîä ñíà÷àëà âíóòðåííåé ÷àñòè îáúåêòà à ïîòîì íàðóæíîé, âìåñòî îäíîé ïîñëåäíåé
	bool blend;//Âêëþ÷åíèå è îòêëþ÷åíèÿ ïðîçðà÷íîñòè îáúåêòà (â öåëÿõ îïòèìèçàöèè ñêîðîñòíûõ
	//õàðàêòèðèñòèê ïðè âûâîäå åãî íà ýêðàí)
	bool sort;//Ñîðòèðîâêà îáúåêòîâ â ïðîñòðàíñòâå îò ñàìûõ äàëüíèõ ê ñàìûì áëèæíèì

        // Material (that contain texture and shader program)
	//D3DMATERIAL9 mtrl;//Ìàòåðèàëû ïîääåðæûâàåìûå îáúåêòîì (ñ ó÷åòîì öâåòîâ îòäåëüíî äëÿ êàæäîãî ìàòåðèàëà)

	int texture;//íîìåð òåêñòóðû çàãðóæåííîé â ìàññèâå
	float scU,scV,scU1,scV1;//Ïàðàìåòðû ìàñøòàááèðîâàíèÿ äëÿ ëîêàëüíûõ îáúåêòîâ

	bool local;//åâëÿåòñÿ ëè îáúåêò ëîêàëüíûì
	bool optionslod;// ïàðàìåòð îïðåäåëÿþùèé óðîâåíü äåòàëèçàöèè îáúõåêòà (LOD) - ñèñòåìíûé èëè ïåñîíàëüíûé
	buffers buf[maxbuf];//Áóôåðû îáúåêòà åñëè îí ëîêàëüíûé, ïðè÷åì ñàìî çíà÷åíèå LOD íàõîäèòñÿ èìåííî çäåñü

	bool rendered;//Âûâåäåí ëè îáúåêò â òåêóùåì êàäðå (äëÿ ïðîçðà÷íûõ îáúåêòîâ)
	float rx, ry, rz;//òåêóùèå ïåðïåíäèêóëÿðíûå ðàññòîÿíèÿ îò èãðîêà äî ãðàíåé êóáà (à íå ïðåäåëüíî äîïóñòèìîå êàê rminx!)
	float r;//Êâàäðàòíîå ðàññòîÿíèå äî îáúåêòà(íåîáõîäèìî äëÿ ñîðòèðîâêè ïðîçðà÷íûõ îáúåêòîâ, ñ öåëüþ èõ êîððåêòíîãî îòîáðàæåíèÿ)

	glm::vec3 pos;//(Ìîæíî tr, íî òîãäà áóäåò ïóòàòüñÿ ñ rt)ïåðåíîñ îáúåêòà ïî îñÿì X, Y, Z
	glm::vec3 sc;//Ìàñøòàááèðîâàíèå îáúåêòà ïî îñÿì X, Y, Z
	glm::vec3 rot;//Ïîâîðîòû îáúåêòà âîêðóã îñåé X, Y, Z
	glm::vec3 vec;//âåêòîð ïåðåìåùåíèÿ èëè òî÷êà ïðèáûòèÿ ÷åðåç òåëåïîðò

	glm::mat4 ObjWorldMatrices;//Ìàòðèöà ïîëîæåíèÿ îáúåêòà
	//Íåîáõîäèìà äëÿ òîãî, ÷òî áû ïðè âûâîäå îáúåêòà íå âû÷èñëÿòü
	//êàæäûé ðàç åãî ìàòðèöó è òåì ñàìûì ñíèçèòü íàãðóçêó íà ïðîöåññîð

	bool phisic;//Ôèçèêà - âû÷èñëåíèå ñòîëêíîâåíèÿ ïåðñîíàæåé ñ äàííûì îáúåêòîì
	//è äðóãèõ îáúåêòîì (åñëè îí äèíàìè÷åñêèé)
//	bool dinamic;//Äèíàìè÷åñêèé îáúåêò - ìîæåò ïîäâåãàòüñÿ ïåðåìåùåíèÿì â ïðîñòðàíñòâå
	bool activate;//àêòèâàöèÿ, íàïðèìåð, äâåðü - îòêðûòà/çàêðûòà èëè ñîîáù îá îòêðûòèè
} *objects;

#endif
